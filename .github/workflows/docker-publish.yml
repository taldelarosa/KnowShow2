name: Build and Publish Docker Image

on:
  # Trigger on new releases
  release:
    types: [published]
  
  # Allow manual trigger from Actions tab
  workflow_dispatch:
    inputs:
      tag:
        description: 'Docker image tag (e.g., v1.0.0, latest)'
        required: true
        default: 'latest'
  
  # Trigger on pushes to main branch (optional - remove if you only want releases)
  push:
    branches:
      - main
    paths:
      - 'src/**'
      - 'Dockerfile'
      - 'docker-entrypoint.sh'
      - '.github/workflows/docker-publish.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository_owner }}/knowshow2

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            # Tag as 'latest' for main branch pushes
            type=raw,value=latest,enable={{is_default_branch}}
            # Tag with version number for releases (v1.0.0 -> 1.0.0)
            type=semver,pattern={{version}}
            # Tag with major.minor for releases (v1.0.0 -> 1.0)
            type=semver,pattern={{major}}.{{minor}}
            # Tag with major version for releases (v1.0.0 -> 1)
            type=semver,pattern={{major}}
            # Tag with git SHA for all pushes
            type=sha,prefix={{branch}}-
            # Use custom tag from workflow_dispatch input
            type=raw,value=${{ github.event.inputs.tag }},enable=${{ github.event_name == 'workflow_dispatch' }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
      
      - name: Image digest
        run: echo "Image published with digest ${{ steps.build-push.outputs.digest }}"
