<?xml version="1.0"?>
<Container version="2">
  <Name>EpisodeIdentifier</Name>
  <Repository>ghcr.io/taldelarosa/knowshow2:latest</Repository>
  <Registry>https://ghcr.io/</Registry>
  <Network>bridge</Network>
  <Shell>sh</Shell>
  <Privileged>false</Privileged>
  <Support>https://github.com/taldelarosa/KnowShow2/issues</Support>
  <Project>https://github.com/taldelarosa/KnowShow2</Project>
  <Overview>Episode Identifier - Identify TV episodes from video files using PGS subtitle hashing and OCR. Matches episodes without relying on filenames. Supports bulk processing, auto-rename, and fuzzy hashing (CTPH/ssdeep) for robust identification.</Overview>
  <Category>MediaApp:Video MediaServer:Video Tools:</Category>
  <WebUI/>
  <TemplateURL/>
  <Icon/>
  <ExtraParams/>
  <PostArgs/>
  <CPUset/>
  <DateInstalled></DateInstalled>
  <DonateText/>
  <DonateLink/>
  <Requires/>
  
  <!-- Path Configurations -->
  <MyIP/>
  <Shell>bash</Shell>
  <Privileged>false</Privileged>
  <Support>https://github.com/taldelarosa/KnowShow2/issues</Support>
  <Project>https://github.com/taldelarosa/KnowShow2</Project>
  <Overview>Episode Identifier - Identify TV episodes from video files using PGS subtitle hashing and OCR. Matches episodes without relying on filenames. Supports bulk processing, auto-rename, and fuzzy hashing (CTPH/ssdeep) for robust identification.</Overview>
  <Category>MediaApp:Video MediaServer:Video Tools:</Category>
  <WebUI/>
  <TemplateURL/>
  <Icon/>
  <ExtraParams/>
  <PostArgs/>
  <CPUset/>
  <DateInstalled></DateInstalled>
  <DonateText/>
  <DonateLink/>
  <Requires/>
  
  <!-- Path Configurations -->
  <Config Name="Videos Directory" Target="/data/videos" Default="/mnt/user/media/videos" Mode="rw" Description="Directory containing video files to identify. Requires read/write access for auto-rename feature." Type="Path" Display="always" Required="true" Mask="false">/mnt/user/media/videos</Config>
  <Config Name="Database Directory" Target="/data/database" Default="/mnt/user/appdata/episodeidentifier/database" Mode="rw" Description="Directory for persistent hash database storage. This data persists across container updates." Type="Path" Display="always" Required="true" Mask="false">/mnt/user/appdata/episodeidentifier/database</Config>
  <Config Name="Config Directory" Target="/data/config" Default="/mnt/user/appdata/episodeidentifier/config" Mode="rw" Description="Directory for configuration files. Place episodeidentifier.config.json here." Type="Path" Display="always" Required="true" Mask="false">/mnt/user/appdata/episodeidentifier/config</Config>
  
  <!-- User/Group Configuration -->
  <Config Name="PUID" Target="PUID" Default="99" Mode="" Description="User ID for file permissions. Default 99 is Unraid's 'nobody' user. Change to match your media file ownership." Type="Variable" Display="advanced" Required="false" Mask="false">99</Config>
  <Config Name="PGID" Target="PGID" Default="100" Mode="" Description="Group ID for file permissions. Default 100 is Unraid's 'users' group. Change to match your media file ownership." Type="Variable" Display="advanced" Required="false" Mask="false">100</Config>
  
  <!-- Application Configuration -->
  <Config Name="Log Level" Target="LOG_LEVEL" Default="Information" Mode="" Description="Logging verbosity. Options: Trace, Debug, Information, Warning, Error, Critical. Use Debug for troubleshooting." Type="Variable" Display="advanced" Required="false" Mask="false">Information</Config>
  <Config Name="Config Path" Target="CONFIG_PATH" Default="/data/config/episodeidentifier.config.json" Mode="" Description="Path to configuration file inside container. Usually no need to change this." Type="Variable" Display="advanced" Required="false" Mask="false">/data/config/episodeidentifier.config.json</Config>
  <Config Name="Hash Database Path" Target="HASH_DB_PATH" Default="/data/database/production_hashes.db" Mode="" Description="Path to SQLite hash database inside container. Usually no need to change this." Type="Variable" Display="advanced" Required="false" Mask="false">/data/database/production_hashes.db</Config>
  
  <Description>
Episode Identifier uses PGS subtitle extraction and OCR to identify TV episodes from video files.

## Key Features:
- **Subtitle-based Identification**: Matches episodes using actual subtitle content, not filenames
- **Fuzzy Hashing**: CTPH/ssdeep algorithms for robust matching even with slight variations
- **Bulk Processing**: Process multiple files with configurable concurrency (default: 4 concurrent)
- **Auto-Rename**: Automatically rename identified files with custom templates
- **Text Search Fallback**: Works even without fuzzy hash support
- **Persistent Database**: Stores learned subtitle hashes across container restarts

## Quick Start:
1. Map your video directory to /data/videos
2. Verify PUID/PGID match your file ownership (default 99/100 works for most)
3. Start container and open console (click container icon â†’ Console)
4. Run commands to identify or store episodes

## Common Usage:

**Identify a video file:**
```
dotnet /app/EpisodeIdentifier.Core.dll --input /data/videos/unknown.mkv --hash-db /data/database/production_hashes.db
```

**Store a known episode for future matching:**
```
dotnet /app/EpisodeIdentifier.Core.dll --store --input /data/videos/MyShow.S01E01.mkv --season 1 --episode 1 --hash-db /data/database/production_hashes.db
```

**Bulk process a directory:**
```
dotnet /app/EpisodeIdentifier.Core.dll --bulk-identify /data/videos/Season1 --hash-db /data/database/production_hashes.db
```

**Identify and auto-rename:**
```
dotnet /app/EpisodeIdentifier.Core.dll --input /data/videos/file.mkv --hash-db /data/database/production_hashes.db --rename --rename-template "MyShow S{season:00}E{episode:00}"
```

## Configuration:
Edit `/mnt/user/appdata/episodeidentifier/config/episodeidentifier.config.json` to adjust:
- Matching thresholds (text similarity, fuzzy hash similarity, total score)
- Bulk processing concurrency (1-100, default 4)
- Filename patterns for series/episode extraction
- Logging verbosity

Changes to config are hot-reloaded (no container restart needed).

## Requirements:
- Video files with PGS (Presentation Graphics Stream) subtitles
- Sufficient disk space for database (~1MB per 100 episodes)
- CPU: Any modern processor (processing is CPU-bound during OCR)
- RAM: 2GB minimum, 4GB recommended for bulk processing

## Troubleshooting:
- **No matches found**: Store known episodes first using --store command
- **Permission errors**: Verify PUID/PGID match your file ownership (run `id` command on Unraid)
- **Missing subtitles**: File must contain PGS subtitle track (check with mkvinfo or ffprobe)
- **OCR errors**: Check container logs for missing language packs

## Documentation:
- Full guide: https://github.com/taldelarosa/KnowShow2/blob/main/docs/unraid.md
- Docker guide: https://github.com/taldelarosa/KnowShow2/blob/main/docs/DOCKER.md
- Issue tracker: https://github.com/taldelarosa/KnowShow2/issues

## Support:
For issues, check container logs first (`docker logs EpisodeIdentifier`), then search existing issues or create a new one with:
- Unraid version
- Container version/tag  
- Relevant log excerpts
- Steps to reproduce
  </Description>
  
  <Networking>
    <Mode>bridge</Mode>
    <Publish/>
  </Networking>
  
  <Data>
    <Volume>
      <HostDir>/mnt/user/media/videos</HostDir>
      <ContainerDir>/data/videos</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/mnt/user/appdata/episodeidentifier/database</HostDir>
      <ContainerDir>/data/database</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
    <Volume>
      <HostDir>/mnt/user/appdata/episodeidentifier/config</HostDir>
      <ContainerDir>/data/config</ContainerDir>
      <Mode>rw</Mode>
    </Volume>
  </Data>
  
  <Environment>
    <Variable>
      <Value>99</Value>
      <Name>PUID</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>100</Value>
      <Name>PGID</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>Information</Value>
      <Name>LOG_LEVEL</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>/data/config/episodeidentifier.config.json</Value>
      <Name>CONFIG_PATH</Name>
      <Mode/>
    </Variable>
    <Variable>
      <Value>/data/database/production_hashes.db</Value>
      <Name>HASH_DB_PATH</Name>
      <Mode/>
    </Variable>
  </Environment>
  
  <Labels/>
</Container>

